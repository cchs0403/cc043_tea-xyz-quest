export function interpolate(
  text: string,
  values: { [s: string]: unknown },
  defaultValues?: { [s: string]: unknown } | number | string
) {
  function getDefault(key: string) {
    if (!defaultValues) return undefined;
    if (typeof defaultValues === 'object')
      return defaultValues[key] || undefined;
    return defaultValues;
  }
  // const variables = text.match(/(\#[a-zA-Z]+\#)|(\$[a-zA-Z]+)/g) || [];
  const variables = text.match(/(\$[a-zA-Z]+)/g) || [];
  for (const match of variables) {
    const varName = match.substring(1);
    const value =
      values[varName] !== undefined ? values[varName] : getDefault(varName);
    if (value === undefined)
      throw new Error(
        `Variable '${varName}' not found, make sure it exists and to provide placeholder values for fallback.`
      );
    text = text.replace(match, `${value}`);
  }
  return text;
}
