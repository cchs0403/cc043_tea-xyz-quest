export function sum<T, T2 extends keyof T>(
  items?: T[],
  key?: T2 | ((s: T, index: number) => number)
): number {
  if (!items) return 0;
  if (!items.length) return 0;
  return (
    items.reduce((state, item, index) => {
      if (typeof item === 'number') {
        return state + item;
      }
      const value =
        typeof key === 'function' ? key(item, index) : item[String(key)];
      return state + (value || 0);
    }, 0) || 0
  );
}
