export const groupBy = <T, T2 extends keyof T>(
  sources: T[],
  key: T2 | ((s: T) => string)
) => {
  return sources.reduce<{ [s: string]: T[] }>((s, source) => {
    const value = typeof key === 'function' ? key(source) : source[String(key)];
    if (value !== undefined) {
      if (!s[value]) {
        s[value] = [];
      }
      s[value].push(source);
    }
    return s;
  }, {});
};
