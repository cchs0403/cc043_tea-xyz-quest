"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.hashId = exports.hashString = exports.Hashids = void 0;
const hash_id_1 = __importDefault(require("./hash-id"));
exports.Hashids = hash_id_1.default;
// cyrb53
const hashString = (str, seed = 0) => {
    let h1 = 0xdeadbeef ^ seed;
    let h2 = 0x41c6ce57 ^ seed;
    for (let i = 0, ch; i < str.length; i++) {
        ch = str.charCodeAt(i);
        h1 = Math.imul(h1 ^ ch, 2654435761);
        h2 = Math.imul(h2 ^ ch, 1597334677);
    }
    h1 =
        Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^
            Math.imul(h2 ^ (h2 >>> 13), 3266489909);
    h2 =
        Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^
            Math.imul(h1 ^ (h1 >>> 13), 3266489909);
    return 4294967296 * (2097151 & h2) + (h1 >>> 0);
};
exports.hashString = hashString;
const DEFAULT = 'upper';
const hashId = (str, { seed = 0, length = 16, alphabet = DEFAULT } = {}) => {
    const hashids = new hash_id_1.default('', length, alphabet === 'upper'
        ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
        : 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890');
    const num = (0, exports.hashString)(str, seed);
    return hashids.encode(num).substring(0, length);
};
exports.hashId = hashId;
