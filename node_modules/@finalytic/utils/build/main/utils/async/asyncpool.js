"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.asyncPool = void 0;
async function* asyncPool(iterable, iteratorFn, concurrency) {
    const executing = new Set();
    async function consume() {
        const [promise, value] = await Promise.race(executing);
        executing.delete(promise);
        return value;
    }
    for (const item of iterable) {
        const promise = (async () => await iteratorFn(item, iterable))().then((value) => [promise, value]);
        executing.add(promise);
        if (executing.size >= concurrency) {
            yield await consume();
        }
    }
    while (executing.size) {
        yield await consume();
    }
}
exports.asyncPool = asyncPool;
asyncPool.all = async function all(iterable, iteratorFn, concurrency) {
    const results = [];
    for await (const result of asyncPool(iterable, iteratorFn, concurrency)) {
        results.push(result);
    }
    return results;
};
