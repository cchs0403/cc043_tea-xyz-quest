import { waitFor } from './async';
export async function retry(fn, { attempts = 3, throwError, onRetry, waitFor: wait, } = {}) {
    let err;
    for (let i = 1; i <= attempts; i++) {
        try {
            if (i > 1 && wait)
                await waitFor(wait);
            return await fn(i);
        }
        catch (error) {
            if (throwError) {
                if (Array.isArray(throwError)) {
                    if (throwError.find((type) => error instanceof type))
                        throw error;
                }
                else if (throwError(error)) {
                    throw error;
                }
            }
            if (onRetry) {
                onRetry(error, i + 1, attempts);
            }
            err = error;
        }
    }
    throw err;
}
