export function wildcardFindAll(text, m) {
    const split = m.split(/\*+/);
    const match = new RegExp(`^${split
        .map(regExpEscape)
        .map((frag, i) => i + 1 < split.length ? `${frag}(?<code${i}>.*)` : frag)
        .join('')}$`, 'i');
    const result = text.match(match)?.map((x) => x.trim());
    if (result?.length) {
        return result.slice(1);
    }
    return [];
}
export function wildcardFind(text, m) {
    return wildcardFindAll(text, m)?.[0];
}
function regExpEscape(s) {
    return s.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&');
}
