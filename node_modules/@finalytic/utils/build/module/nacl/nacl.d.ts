export declare class SymmetricCrypto {
    static fromPassphrase(secret: string): SymmetricCrypto;
    static fromSecretKey(key: string | Uint8Array): SymmetricCrypto;
    static fromNew(): SymmetricCrypto;
    get secretKey(): string;
    private _secretKey;
    constructor(secretKey?: Uint8Array | string);
    static seal(json: any, secretKey: Uint8Array | string): Promise<string>;
    seal(json: any): Promise<string>;
    open(messageWithNonce: string): Promise<any>;
    destroy(): void;
}
export declare class AsymmetricCrypto {
    static fromSecret(secret: string): AsymmetricCrypto;
    static fromBase64(key: string): AsymmetricCrypto;
    static fromEmpty(): AsymmetricCrypto;
    static fromArray(key: Uint8Array): AsymmetricCrypto;
    get publicKey(): string;
    set publicKey(value: string);
    get secretKey(): string;
    private _publicKey;
    private _secretKey;
    constructor(secretKey?: Uint8Array | string);
    static seal(json: any, publicKey: Uint8Array | string): Promise<string>;
    seal(json: any, publicKey: Uint8Array | string): Promise<string>;
    open(messageWithNonce: string): Promise<any>;
    destroy(): void;
}
